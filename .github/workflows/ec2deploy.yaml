name: Build, Test and Deploy to AWS

on:
  push:
    branches:
      - '**'

env:
  AWS_PRIVATE_KEY: ${{ secrets.KEYAWS }}
  EC2_IP: ${{ secrets.EC2_IP }}
  BACKEND_PORT: ${{ secrets.BACKEND_PORT }}
  SSH_OPTIONS: '-o StrictHostKeyChecking=no -i key.pem ubuntu@${{ secrets.EC2_IP }}'

jobs:
  test:
    runs-on: ubuntu-24.04
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --prefix tupan --legacy-peer-deps

      - name: Run Jest tests
        run: npm test --prefix tupan

  deploy:
    runs-on: ubuntu-24.04
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Create target directory on AWS instance
        run: |
          ssh ${{ env.SSH_OPTIONS }} 'mkdir -p /home/ubuntu/tupan/'

      - name: Transfer code to AWS instance
        run: |
          scp -o StrictHostKeyChecking=no -i key.pem -r ./tupan/ ubuntu@${{ env.EC2_IP }}:/home/ubuntu/tupan

      - name: Create .env file
        run: |
          echo "BACKEND_URL=${{ env.EC2_IP }}:${{ env.BACKEND_PORT }}/" >> tupan/.env

      - name: SSH into AWS and build Docker image
        run: |
          ssh ${{ env.SSH_OPTIONS }} 'cd /home/ubuntu/tupan/tupan && sudo docker build -t tupan-front .'

      - name: Stop running container
        run: |
          ssh ${{ env.SSH_OPTIONS }} 'sudo docker stop tupan-front || true'
          ssh ${{ env.SSH_OPTIONS }} 'sudo docker rm tupan-front || true'

      - name: Run new container
        run: |
          ssh ${{ env.SSH_OPTIONS }} 'sudo docker run -d --restart always --name tupan-front -p 80:3000 tupan-front'

      - name: Cleanup SSH key
        run: |
          rm -f key.pem